// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetSubjectsOfClassHandlerFunc turns a function with the right signature into a get subjects of class handler
type GetSubjectsOfClassHandlerFunc func(GetSubjectsOfClassParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSubjectsOfClassHandlerFunc) Handle(params GetSubjectsOfClassParams) middleware.Responder {
	return fn(params)
}

// GetSubjectsOfClassHandler interface for that can handle valid get subjects of class params
type GetSubjectsOfClassHandler interface {
	Handle(GetSubjectsOfClassParams) middleware.Responder
}

// NewGetSubjectsOfClass creates a new http.Handler for the get subjects of class operation
func NewGetSubjectsOfClass(ctx *middleware.Context, handler GetSubjectsOfClassHandler) *GetSubjectsOfClass {
	return &GetSubjectsOfClass{Context: ctx, Handler: handler}
}

/*
	GetSubjectsOfClass swagger:route GET /class/{ID}/subjects getSubjectsOfClass

GetSubjectsOfClass get subjects of class API
*/
type GetSubjectsOfClass struct {
	Context *middleware.Context
	Handler GetSubjectsOfClassHandler
}

func (o *GetSubjectsOfClass) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetSubjectsOfClassParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
