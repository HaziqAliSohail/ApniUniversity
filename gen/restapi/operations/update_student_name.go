// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateStudentNameHandlerFunc turns a function with the right signature into a update student name handler
type UpdateStudentNameHandlerFunc func(UpdateStudentNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateStudentNameHandlerFunc) Handle(params UpdateStudentNameParams) middleware.Responder {
	return fn(params)
}

// UpdateStudentNameHandler interface for that can handle valid update student name params
type UpdateStudentNameHandler interface {
	Handle(UpdateStudentNameParams) middleware.Responder
}

// NewUpdateStudentName creates a new http.Handler for the update student name operation
func NewUpdateStudentName(ctx *middleware.Context, handler UpdateStudentNameHandler) *UpdateStudentName {
	return &UpdateStudentName{Context: ctx, Handler: handler}
}

/*
	UpdateStudentName swagger:route PATCH /student/{ID}/name updateStudentName

UpdateStudentName update student name API
*/
type UpdateStudentName struct {
	Context *middleware.Context
	Handler UpdateStudentNameHandler
}

func (o *UpdateStudentName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateStudentNameParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// UpdateStudentNameBody update student name body
//
// swagger:model UpdateStudentNameBody
type UpdateStudentNameBody struct {

	// name
	Name string `json:"Name,omitempty"`
}

// Validate validates this update student name body
func (o *UpdateStudentNameBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update student name body based on context it is used
func (o *UpdateStudentNameBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateStudentNameBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateStudentNameBody) UnmarshalBinary(b []byte) error {
	var res UpdateStudentNameBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
