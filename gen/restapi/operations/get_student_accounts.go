// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetStudentAccountsHandlerFunc turns a function with the right signature into a get student accounts handler
type GetStudentAccountsHandlerFunc func(GetStudentAccountsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetStudentAccountsHandlerFunc) Handle(params GetStudentAccountsParams) middleware.Responder {
	return fn(params)
}

// GetStudentAccountsHandler interface for that can handle valid get student accounts params
type GetStudentAccountsHandler interface {
	Handle(GetStudentAccountsParams) middleware.Responder
}

// NewGetStudentAccounts creates a new http.Handler for the get student accounts operation
func NewGetStudentAccounts(ctx *middleware.Context, handler GetStudentAccountsHandler) *GetStudentAccounts {
	return &GetStudentAccounts{Context: ctx, Handler: handler}
}

/*
	GetStudentAccounts swagger:route GET /account/student getStudentAccounts

Get all Student Accounts
*/
type GetStudentAccounts struct {
	Context *middleware.Context
	Handler GetStudentAccountsHandler
}

func (o *GetStudentAccounts) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetStudentAccountsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
