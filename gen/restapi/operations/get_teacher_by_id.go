// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetTeacherByIDHandlerFunc turns a function with the right signature into a get teacher by ID handler
type GetTeacherByIDHandlerFunc func(GetTeacherByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTeacherByIDHandlerFunc) Handle(params GetTeacherByIDParams) middleware.Responder {
	return fn(params)
}

// GetTeacherByIDHandler interface for that can handle valid get teacher by ID params
type GetTeacherByIDHandler interface {
	Handle(GetTeacherByIDParams) middleware.Responder
}

// NewGetTeacherByID creates a new http.Handler for the get teacher by ID operation
func NewGetTeacherByID(ctx *middleware.Context, handler GetTeacherByIDHandler) *GetTeacherByID {
	return &GetTeacherByID{Context: ctx, Handler: handler}
}

/*
	GetTeacherByID swagger:route GET /teacher/{ID} getTeacherById

GetTeacherByID get teacher by ID API
*/
type GetTeacherByID struct {
	Context *middleware.Context
	Handler GetTeacherByIDHandler
}

func (o *GetTeacherByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetTeacherByIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
