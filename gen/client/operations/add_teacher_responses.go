// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/HaziqAliSohail/ApniUniversity/gen/models"
)

// AddTeacherReader is a Reader for the AddTeacher structure.
type AddTeacherReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTeacherReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddTeacherCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewAddTeacherConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddTeacherInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /teacher] addTeacher", response, response.Code())
	}
}

// NewAddTeacherCreated creates a AddTeacherCreated with default headers values
func NewAddTeacherCreated() *AddTeacherCreated {
	return &AddTeacherCreated{}
}

/*
AddTeacherCreated describes a response with status code 201, with default header values.

Teacher registered Successfully!
*/
type AddTeacherCreated struct {
	Payload *models.Teacher
}

// IsSuccess returns true when this add teacher created response has a 2xx status code
func (o *AddTeacherCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add teacher created response has a 3xx status code
func (o *AddTeacherCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add teacher created response has a 4xx status code
func (o *AddTeacherCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add teacher created response has a 5xx status code
func (o *AddTeacherCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add teacher created response a status code equal to that given
func (o *AddTeacherCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add teacher created response
func (o *AddTeacherCreated) Code() int {
	return 201
}

func (o *AddTeacherCreated) Error() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherCreated  %+v", 201, o.Payload)
}

func (o *AddTeacherCreated) String() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherCreated  %+v", 201, o.Payload)
}

func (o *AddTeacherCreated) GetPayload() *models.Teacher {
	return o.Payload
}

func (o *AddTeacherCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Teacher)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeacherConflict creates a AddTeacherConflict with default headers values
func NewAddTeacherConflict() *AddTeacherConflict {
	return &AddTeacherConflict{}
}

/*
AddTeacherConflict describes a response with status code 409, with default header values.

Teacher already exists
*/
type AddTeacherConflict struct {
}

// IsSuccess returns true when this add teacher conflict response has a 2xx status code
func (o *AddTeacherConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add teacher conflict response has a 3xx status code
func (o *AddTeacherConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add teacher conflict response has a 4xx status code
func (o *AddTeacherConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add teacher conflict response has a 5xx status code
func (o *AddTeacherConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add teacher conflict response a status code equal to that given
func (o *AddTeacherConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add teacher conflict response
func (o *AddTeacherConflict) Code() int {
	return 409
}

func (o *AddTeacherConflict) Error() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherConflict ", 409)
}

func (o *AddTeacherConflict) String() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherConflict ", 409)
}

func (o *AddTeacherConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTeacherInternalServerError creates a AddTeacherInternalServerError with default headers values
func NewAddTeacherInternalServerError() *AddTeacherInternalServerError {
	return &AddTeacherInternalServerError{}
}

/*
AddTeacherInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddTeacherInternalServerError struct {
}

// IsSuccess returns true when this add teacher internal server error response has a 2xx status code
func (o *AddTeacherInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add teacher internal server error response has a 3xx status code
func (o *AddTeacherInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add teacher internal server error response has a 4xx status code
func (o *AddTeacherInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add teacher internal server error response has a 5xx status code
func (o *AddTeacherInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add teacher internal server error response a status code equal to that given
func (o *AddTeacherInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add teacher internal server error response
func (o *AddTeacherInternalServerError) Code() int {
	return 500
}

func (o *AddTeacherInternalServerError) Error() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherInternalServerError ", 500)
}

func (o *AddTeacherInternalServerError) String() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherInternalServerError ", 500)
}

func (o *AddTeacherInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
