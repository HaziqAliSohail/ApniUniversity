// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteStudentReader is a Reader for the DeleteStudent structure.
type DeleteStudentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteStudentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteStudentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteStudentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteStudentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /student/{ID}] deleteStudent", response, response.Code())
	}
}

// NewDeleteStudentNoContent creates a DeleteStudentNoContent with default headers values
func NewDeleteStudentNoContent() *DeleteStudentNoContent {
	return &DeleteStudentNoContent{}
}

/*
DeleteStudentNoContent describes a response with status code 204, with default header values.

Student Deleted Successfully!
*/
type DeleteStudentNoContent struct {
}

// IsSuccess returns true when this delete student no content response has a 2xx status code
func (o *DeleteStudentNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete student no content response has a 3xx status code
func (o *DeleteStudentNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete student no content response has a 4xx status code
func (o *DeleteStudentNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete student no content response has a 5xx status code
func (o *DeleteStudentNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete student no content response a status code equal to that given
func (o *DeleteStudentNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete student no content response
func (o *DeleteStudentNoContent) Code() int {
	return 204
}

func (o *DeleteStudentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /student/{ID}][%d] deleteStudentNoContent ", 204)
}

func (o *DeleteStudentNoContent) String() string {
	return fmt.Sprintf("[DELETE /student/{ID}][%d] deleteStudentNoContent ", 204)
}

func (o *DeleteStudentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStudentNotFound creates a DeleteStudentNotFound with default headers values
func NewDeleteStudentNotFound() *DeleteStudentNotFound {
	return &DeleteStudentNotFound{}
}

/*
DeleteStudentNotFound describes a response with status code 404, with default header values.

Student not found
*/
type DeleteStudentNotFound struct {
}

// IsSuccess returns true when this delete student not found response has a 2xx status code
func (o *DeleteStudentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete student not found response has a 3xx status code
func (o *DeleteStudentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete student not found response has a 4xx status code
func (o *DeleteStudentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete student not found response has a 5xx status code
func (o *DeleteStudentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete student not found response a status code equal to that given
func (o *DeleteStudentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete student not found response
func (o *DeleteStudentNotFound) Code() int {
	return 404
}

func (o *DeleteStudentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /student/{ID}][%d] deleteStudentNotFound ", 404)
}

func (o *DeleteStudentNotFound) String() string {
	return fmt.Sprintf("[DELETE /student/{ID}][%d] deleteStudentNotFound ", 404)
}

func (o *DeleteStudentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStudentInternalServerError creates a DeleteStudentInternalServerError with default headers values
func NewDeleteStudentInternalServerError() *DeleteStudentInternalServerError {
	return &DeleteStudentInternalServerError{}
}

/*
DeleteStudentInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteStudentInternalServerError struct {
}

// IsSuccess returns true when this delete student internal server error response has a 2xx status code
func (o *DeleteStudentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete student internal server error response has a 3xx status code
func (o *DeleteStudentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete student internal server error response has a 4xx status code
func (o *DeleteStudentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete student internal server error response has a 5xx status code
func (o *DeleteStudentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete student internal server error response a status code equal to that given
func (o *DeleteStudentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete student internal server error response
func (o *DeleteStudentInternalServerError) Code() int {
	return 500
}

func (o *DeleteStudentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /student/{ID}][%d] deleteStudentInternalServerError ", 500)
}

func (o *DeleteStudentInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /student/{ID}][%d] deleteStudentInternalServerError ", 500)
}

func (o *DeleteStudentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
