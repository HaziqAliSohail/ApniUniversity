// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ApniUniversity/gen/models"
)

// GetStudentReader is a Reader for the GetStudent structure.
type GetStudentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStudentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStudentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetStudentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStudentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /student] getStudent", response, response.Code())
	}
}

// NewGetStudentOK creates a GetStudentOK with default headers values
func NewGetStudentOK() *GetStudentOK {
	return &GetStudentOK{}
}

/*
GetStudentOK describes a response with status code 200, with default header values.

Students' response
*/
type GetStudentOK struct {
	Payload []*models.Student
}

// IsSuccess returns true when this get student o k response has a 2xx status code
func (o *GetStudentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get student o k response has a 3xx status code
func (o *GetStudentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get student o k response has a 4xx status code
func (o *GetStudentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get student o k response has a 5xx status code
func (o *GetStudentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get student o k response a status code equal to that given
func (o *GetStudentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get student o k response
func (o *GetStudentOK) Code() int {
	return 200
}

func (o *GetStudentOK) Error() string {
	return fmt.Sprintf("[GET /student][%d] getStudentOK  %+v", 200, o.Payload)
}

func (o *GetStudentOK) String() string {
	return fmt.Sprintf("[GET /student][%d] getStudentOK  %+v", 200, o.Payload)
}

func (o *GetStudentOK) GetPayload() []*models.Student {
	return o.Payload
}

func (o *GetStudentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStudentNotFound creates a GetStudentNotFound with default headers values
func NewGetStudentNotFound() *GetStudentNotFound {
	return &GetStudentNotFound{}
}

/*
GetStudentNotFound describes a response with status code 404, with default header values.

Students not found
*/
type GetStudentNotFound struct {
}

// IsSuccess returns true when this get student not found response has a 2xx status code
func (o *GetStudentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get student not found response has a 3xx status code
func (o *GetStudentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get student not found response has a 4xx status code
func (o *GetStudentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get student not found response has a 5xx status code
func (o *GetStudentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get student not found response a status code equal to that given
func (o *GetStudentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get student not found response
func (o *GetStudentNotFound) Code() int {
	return 404
}

func (o *GetStudentNotFound) Error() string {
	return fmt.Sprintf("[GET /student][%d] getStudentNotFound ", 404)
}

func (o *GetStudentNotFound) String() string {
	return fmt.Sprintf("[GET /student][%d] getStudentNotFound ", 404)
}

func (o *GetStudentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStudentInternalServerError creates a GetStudentInternalServerError with default headers values
func NewGetStudentInternalServerError() *GetStudentInternalServerError {
	return &GetStudentInternalServerError{}
}

/*
GetStudentInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetStudentInternalServerError struct {
}

// IsSuccess returns true when this get student internal server error response has a 2xx status code
func (o *GetStudentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get student internal server error response has a 3xx status code
func (o *GetStudentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get student internal server error response has a 4xx status code
func (o *GetStudentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get student internal server error response has a 5xx status code
func (o *GetStudentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get student internal server error response a status code equal to that given
func (o *GetStudentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get student internal server error response
func (o *GetStudentInternalServerError) Code() int {
	return 500
}

func (o *GetStudentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /student][%d] getStudentInternalServerError ", 500)
}

func (o *GetStudentInternalServerError) String() string {
	return fmt.Sprintf("[GET /student][%d] getStudentInternalServerError ", 500)
}

func (o *GetStudentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
