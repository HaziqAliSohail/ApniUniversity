// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ApniUniversity/gen/models"
)

// AddClassReader is a Reader for the AddClass structure.
type AddClassReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddClassReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddClassCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewAddClassConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddClassInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /class] addClass", response, response.Code())
	}
}

// NewAddClassCreated creates a AddClassCreated with default headers values
func NewAddClassCreated() *AddClassCreated {
	return &AddClassCreated{}
}

/*
AddClassCreated describes a response with status code 201, with default header values.

Class added Successfully
*/
type AddClassCreated struct {
	Payload *models.Class
}

// IsSuccess returns true when this add class created response has a 2xx status code
func (o *AddClassCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add class created response has a 3xx status code
func (o *AddClassCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add class created response has a 4xx status code
func (o *AddClassCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add class created response has a 5xx status code
func (o *AddClassCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add class created response a status code equal to that given
func (o *AddClassCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add class created response
func (o *AddClassCreated) Code() int {
	return 201
}

func (o *AddClassCreated) Error() string {
	return fmt.Sprintf("[POST /class][%d] addClassCreated  %+v", 201, o.Payload)
}

func (o *AddClassCreated) String() string {
	return fmt.Sprintf("[POST /class][%d] addClassCreated  %+v", 201, o.Payload)
}

func (o *AddClassCreated) GetPayload() *models.Class {
	return o.Payload
}

func (o *AddClassCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Class)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddClassConflict creates a AddClassConflict with default headers values
func NewAddClassConflict() *AddClassConflict {
	return &AddClassConflict{}
}

/*
AddClassConflict describes a response with status code 409, with default header values.

Class already exists
*/
type AddClassConflict struct {
}

// IsSuccess returns true when this add class conflict response has a 2xx status code
func (o *AddClassConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add class conflict response has a 3xx status code
func (o *AddClassConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add class conflict response has a 4xx status code
func (o *AddClassConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add class conflict response has a 5xx status code
func (o *AddClassConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add class conflict response a status code equal to that given
func (o *AddClassConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add class conflict response
func (o *AddClassConflict) Code() int {
	return 409
}

func (o *AddClassConflict) Error() string {
	return fmt.Sprintf("[POST /class][%d] addClassConflict ", 409)
}

func (o *AddClassConflict) String() string {
	return fmt.Sprintf("[POST /class][%d] addClassConflict ", 409)
}

func (o *AddClassConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddClassInternalServerError creates a AddClassInternalServerError with default headers values
func NewAddClassInternalServerError() *AddClassInternalServerError {
	return &AddClassInternalServerError{}
}

/*
AddClassInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type AddClassInternalServerError struct {
}

// IsSuccess returns true when this add class internal server error response has a 2xx status code
func (o *AddClassInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add class internal server error response has a 3xx status code
func (o *AddClassInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add class internal server error response has a 4xx status code
func (o *AddClassInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add class internal server error response has a 5xx status code
func (o *AddClassInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add class internal server error response a status code equal to that given
func (o *AddClassInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add class internal server error response
func (o *AddClassInternalServerError) Code() int {
	return 500
}

func (o *AddClassInternalServerError) Error() string {
	return fmt.Sprintf("[POST /class][%d] addClassInternalServerError ", 500)
}

func (o *AddClassInternalServerError) String() string {
	return fmt.Sprintf("[POST /class][%d] addClassInternalServerError ", 500)
}

func (o *AddClassInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
