// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/HaziqAliSohail/ApniUniversity/gen/models"
)

// GetTeacherOfSubjectReader is a Reader for the GetTeacherOfSubject structure.
type GetTeacherOfSubjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeacherOfSubjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeacherOfSubjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTeacherOfSubjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTeacherOfSubjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /subject/{ID}/teacher] getTeacherOfSubject", response, response.Code())
	}
}

// NewGetTeacherOfSubjectOK creates a GetTeacherOfSubjectOK with default headers values
func NewGetTeacherOfSubjectOK() *GetTeacherOfSubjectOK {
	return &GetTeacherOfSubjectOK{}
}

/*
GetTeacherOfSubjectOK describes a response with status code 200, with default header values.

Subject's Teacher as response
*/
type GetTeacherOfSubjectOK struct {
	Payload *models.Teacher
}

// IsSuccess returns true when this get teacher of subject o k response has a 2xx status code
func (o *GetTeacherOfSubjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get teacher of subject o k response has a 3xx status code
func (o *GetTeacherOfSubjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teacher of subject o k response has a 4xx status code
func (o *GetTeacherOfSubjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get teacher of subject o k response has a 5xx status code
func (o *GetTeacherOfSubjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get teacher of subject o k response a status code equal to that given
func (o *GetTeacherOfSubjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get teacher of subject o k response
func (o *GetTeacherOfSubjectOK) Code() int {
	return 200
}

func (o *GetTeacherOfSubjectOK) Error() string {
	return fmt.Sprintf("[GET /subject/{ID}/teacher][%d] getTeacherOfSubjectOK  %+v", 200, o.Payload)
}

func (o *GetTeacherOfSubjectOK) String() string {
	return fmt.Sprintf("[GET /subject/{ID}/teacher][%d] getTeacherOfSubjectOK  %+v", 200, o.Payload)
}

func (o *GetTeacherOfSubjectOK) GetPayload() *models.Teacher {
	return o.Payload
}

func (o *GetTeacherOfSubjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Teacher)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeacherOfSubjectNotFound creates a GetTeacherOfSubjectNotFound with default headers values
func NewGetTeacherOfSubjectNotFound() *GetTeacherOfSubjectNotFound {
	return &GetTeacherOfSubjectNotFound{}
}

/*
GetTeacherOfSubjectNotFound describes a response with status code 404, with default header values.

Subject not found
*/
type GetTeacherOfSubjectNotFound struct {
}

// IsSuccess returns true when this get teacher of subject not found response has a 2xx status code
func (o *GetTeacherOfSubjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get teacher of subject not found response has a 3xx status code
func (o *GetTeacherOfSubjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teacher of subject not found response has a 4xx status code
func (o *GetTeacherOfSubjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get teacher of subject not found response has a 5xx status code
func (o *GetTeacherOfSubjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get teacher of subject not found response a status code equal to that given
func (o *GetTeacherOfSubjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get teacher of subject not found response
func (o *GetTeacherOfSubjectNotFound) Code() int {
	return 404
}

func (o *GetTeacherOfSubjectNotFound) Error() string {
	return fmt.Sprintf("[GET /subject/{ID}/teacher][%d] getTeacherOfSubjectNotFound ", 404)
}

func (o *GetTeacherOfSubjectNotFound) String() string {
	return fmt.Sprintf("[GET /subject/{ID}/teacher][%d] getTeacherOfSubjectNotFound ", 404)
}

func (o *GetTeacherOfSubjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTeacherOfSubjectInternalServerError creates a GetTeacherOfSubjectInternalServerError with default headers values
func NewGetTeacherOfSubjectInternalServerError() *GetTeacherOfSubjectInternalServerError {
	return &GetTeacherOfSubjectInternalServerError{}
}

/*
GetTeacherOfSubjectInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetTeacherOfSubjectInternalServerError struct {
}

// IsSuccess returns true when this get teacher of subject internal server error response has a 2xx status code
func (o *GetTeacherOfSubjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get teacher of subject internal server error response has a 3xx status code
func (o *GetTeacherOfSubjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teacher of subject internal server error response has a 4xx status code
func (o *GetTeacherOfSubjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get teacher of subject internal server error response has a 5xx status code
func (o *GetTeacherOfSubjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get teacher of subject internal server error response a status code equal to that given
func (o *GetTeacherOfSubjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get teacher of subject internal server error response
func (o *GetTeacherOfSubjectInternalServerError) Code() int {
	return 500
}

func (o *GetTeacherOfSubjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /subject/{ID}/teacher][%d] getTeacherOfSubjectInternalServerError ", 500)
}

func (o *GetTeacherOfSubjectInternalServerError) String() string {
	return fmt.Sprintf("[GET /subject/{ID}/teacher][%d] getTeacherOfSubjectInternalServerError ", 500)
}

func (o *GetTeacherOfSubjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
