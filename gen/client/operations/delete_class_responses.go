// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteClassReader is a Reader for the DeleteClass structure.
type DeleteClassReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteClassReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteClassNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteClassNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteClassInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /class/{ID}] deleteClass", response, response.Code())
	}
}

// NewDeleteClassNoContent creates a DeleteClassNoContent with default headers values
func NewDeleteClassNoContent() *DeleteClassNoContent {
	return &DeleteClassNoContent{}
}

/*
DeleteClassNoContent describes a response with status code 204, with default header values.

Class Deleted Successfully!
*/
type DeleteClassNoContent struct {
}

// IsSuccess returns true when this delete class no content response has a 2xx status code
func (o *DeleteClassNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete class no content response has a 3xx status code
func (o *DeleteClassNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete class no content response has a 4xx status code
func (o *DeleteClassNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete class no content response has a 5xx status code
func (o *DeleteClassNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete class no content response a status code equal to that given
func (o *DeleteClassNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete class no content response
func (o *DeleteClassNoContent) Code() int {
	return 204
}

func (o *DeleteClassNoContent) Error() string {
	return fmt.Sprintf("[DELETE /class/{ID}][%d] deleteClassNoContent ", 204)
}

func (o *DeleteClassNoContent) String() string {
	return fmt.Sprintf("[DELETE /class/{ID}][%d] deleteClassNoContent ", 204)
}

func (o *DeleteClassNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteClassNotFound creates a DeleteClassNotFound with default headers values
func NewDeleteClassNotFound() *DeleteClassNotFound {
	return &DeleteClassNotFound{}
}

/*
DeleteClassNotFound describes a response with status code 404, with default header values.

Class not found
*/
type DeleteClassNotFound struct {
}

// IsSuccess returns true when this delete class not found response has a 2xx status code
func (o *DeleteClassNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete class not found response has a 3xx status code
func (o *DeleteClassNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete class not found response has a 4xx status code
func (o *DeleteClassNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete class not found response has a 5xx status code
func (o *DeleteClassNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete class not found response a status code equal to that given
func (o *DeleteClassNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete class not found response
func (o *DeleteClassNotFound) Code() int {
	return 404
}

func (o *DeleteClassNotFound) Error() string {
	return fmt.Sprintf("[DELETE /class/{ID}][%d] deleteClassNotFound ", 404)
}

func (o *DeleteClassNotFound) String() string {
	return fmt.Sprintf("[DELETE /class/{ID}][%d] deleteClassNotFound ", 404)
}

func (o *DeleteClassNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteClassInternalServerError creates a DeleteClassInternalServerError with default headers values
func NewDeleteClassInternalServerError() *DeleteClassInternalServerError {
	return &DeleteClassInternalServerError{}
}

/*
DeleteClassInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteClassInternalServerError struct {
}

// IsSuccess returns true when this delete class internal server error response has a 2xx status code
func (o *DeleteClassInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete class internal server error response has a 3xx status code
func (o *DeleteClassInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete class internal server error response has a 4xx status code
func (o *DeleteClassInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete class internal server error response has a 5xx status code
func (o *DeleteClassInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete class internal server error response a status code equal to that given
func (o *DeleteClassInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete class internal server error response
func (o *DeleteClassInternalServerError) Code() int {
	return 500
}

func (o *DeleteClassInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /class/{ID}][%d] deleteClassInternalServerError ", 500)
}

func (o *DeleteClassInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /class/{ID}][%d] deleteClassInternalServerError ", 500)
}

func (o *DeleteClassInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
