// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ApniUniversity/gen/models"
)

// GetTeacherByIDReader is a Reader for the GetTeacherByID structure.
type GetTeacherByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeacherByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeacherByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTeacherByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTeacherByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /teacher/{ID}] getTeacherByID", response, response.Code())
	}
}

// NewGetTeacherByIDOK creates a GetTeacherByIDOK with default headers values
func NewGetTeacherByIDOK() *GetTeacherByIDOK {
	return &GetTeacherByIDOK{}
}

/*
GetTeacherByIDOK describes a response with status code 200, with default header values.

Teacher response
*/
type GetTeacherByIDOK struct {
	Payload *models.Teacher
}

// IsSuccess returns true when this get teacher by Id o k response has a 2xx status code
func (o *GetTeacherByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get teacher by Id o k response has a 3xx status code
func (o *GetTeacherByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teacher by Id o k response has a 4xx status code
func (o *GetTeacherByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get teacher by Id o k response has a 5xx status code
func (o *GetTeacherByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get teacher by Id o k response a status code equal to that given
func (o *GetTeacherByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get teacher by Id o k response
func (o *GetTeacherByIDOK) Code() int {
	return 200
}

func (o *GetTeacherByIDOK) Error() string {
	return fmt.Sprintf("[GET /teacher/{ID}][%d] getTeacherByIdOK  %+v", 200, o.Payload)
}

func (o *GetTeacherByIDOK) String() string {
	return fmt.Sprintf("[GET /teacher/{ID}][%d] getTeacherByIdOK  %+v", 200, o.Payload)
}

func (o *GetTeacherByIDOK) GetPayload() *models.Teacher {
	return o.Payload
}

func (o *GetTeacherByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Teacher)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeacherByIDNotFound creates a GetTeacherByIDNotFound with default headers values
func NewGetTeacherByIDNotFound() *GetTeacherByIDNotFound {
	return &GetTeacherByIDNotFound{}
}

/*
GetTeacherByIDNotFound describes a response with status code 404, with default header values.

Teacher not found
*/
type GetTeacherByIDNotFound struct {
}

// IsSuccess returns true when this get teacher by Id not found response has a 2xx status code
func (o *GetTeacherByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get teacher by Id not found response has a 3xx status code
func (o *GetTeacherByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teacher by Id not found response has a 4xx status code
func (o *GetTeacherByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get teacher by Id not found response has a 5xx status code
func (o *GetTeacherByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get teacher by Id not found response a status code equal to that given
func (o *GetTeacherByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get teacher by Id not found response
func (o *GetTeacherByIDNotFound) Code() int {
	return 404
}

func (o *GetTeacherByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /teacher/{ID}][%d] getTeacherByIdNotFound ", 404)
}

func (o *GetTeacherByIDNotFound) String() string {
	return fmt.Sprintf("[GET /teacher/{ID}][%d] getTeacherByIdNotFound ", 404)
}

func (o *GetTeacherByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTeacherByIDInternalServerError creates a GetTeacherByIDInternalServerError with default headers values
func NewGetTeacherByIDInternalServerError() *GetTeacherByIDInternalServerError {
	return &GetTeacherByIDInternalServerError{}
}

/*
GetTeacherByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetTeacherByIDInternalServerError struct {
}

// IsSuccess returns true when this get teacher by Id internal server error response has a 2xx status code
func (o *GetTeacherByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get teacher by Id internal server error response has a 3xx status code
func (o *GetTeacherByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teacher by Id internal server error response has a 4xx status code
func (o *GetTeacherByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get teacher by Id internal server error response has a 5xx status code
func (o *GetTeacherByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get teacher by Id internal server error response a status code equal to that given
func (o *GetTeacherByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get teacher by Id internal server error response
func (o *GetTeacherByIDInternalServerError) Code() int {
	return 500
}

func (o *GetTeacherByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /teacher/{ID}][%d] getTeacherByIdInternalServerError ", 500)
}

func (o *GetTeacherByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /teacher/{ID}][%d] getTeacherByIdInternalServerError ", 500)
}

func (o *GetTeacherByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
