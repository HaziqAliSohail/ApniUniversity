// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ApniUniversity/gen/models"
)

// GetSubjectReader is a Reader for the GetSubject structure.
type GetSubjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSubjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /subject] getSubject", response, response.Code())
	}
}

// NewGetSubjectOK creates a GetSubjectOK with default headers values
func NewGetSubjectOK() *GetSubjectOK {
	return &GetSubjectOK{}
}

/*
GetSubjectOK describes a response with status code 200, with default header values.

Subjects' response
*/
type GetSubjectOK struct {
	Payload []*models.Subject
}

// IsSuccess returns true when this get subject o k response has a 2xx status code
func (o *GetSubjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get subject o k response has a 3xx status code
func (o *GetSubjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject o k response has a 4xx status code
func (o *GetSubjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject o k response has a 5xx status code
func (o *GetSubjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject o k response a status code equal to that given
func (o *GetSubjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get subject o k response
func (o *GetSubjectOK) Code() int {
	return 200
}

func (o *GetSubjectOK) Error() string {
	return fmt.Sprintf("[GET /subject][%d] getSubjectOK  %+v", 200, o.Payload)
}

func (o *GetSubjectOK) String() string {
	return fmt.Sprintf("[GET /subject][%d] getSubjectOK  %+v", 200, o.Payload)
}

func (o *GetSubjectOK) GetPayload() []*models.Subject {
	return o.Payload
}

func (o *GetSubjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectNotFound creates a GetSubjectNotFound with default headers values
func NewGetSubjectNotFound() *GetSubjectNotFound {
	return &GetSubjectNotFound{}
}

/*
GetSubjectNotFound describes a response with status code 404, with default header values.

Subjects not found
*/
type GetSubjectNotFound struct {
}

// IsSuccess returns true when this get subject not found response has a 2xx status code
func (o *GetSubjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject not found response has a 3xx status code
func (o *GetSubjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject not found response has a 4xx status code
func (o *GetSubjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subject not found response has a 5xx status code
func (o *GetSubjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject not found response a status code equal to that given
func (o *GetSubjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get subject not found response
func (o *GetSubjectNotFound) Code() int {
	return 404
}

func (o *GetSubjectNotFound) Error() string {
	return fmt.Sprintf("[GET /subject][%d] getSubjectNotFound ", 404)
}

func (o *GetSubjectNotFound) String() string {
	return fmt.Sprintf("[GET /subject][%d] getSubjectNotFound ", 404)
}

func (o *GetSubjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubjectInternalServerError creates a GetSubjectInternalServerError with default headers values
func NewGetSubjectInternalServerError() *GetSubjectInternalServerError {
	return &GetSubjectInternalServerError{}
}

/*
GetSubjectInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetSubjectInternalServerError struct {
}

// IsSuccess returns true when this get subject internal server error response has a 2xx status code
func (o *GetSubjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject internal server error response has a 3xx status code
func (o *GetSubjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject internal server error response has a 4xx status code
func (o *GetSubjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject internal server error response has a 5xx status code
func (o *GetSubjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get subject internal server error response a status code equal to that given
func (o *GetSubjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get subject internal server error response
func (o *GetSubjectInternalServerError) Code() int {
	return 500
}

func (o *GetSubjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /subject][%d] getSubjectInternalServerError ", 500)
}

func (o *GetSubjectInternalServerError) String() string {
	return fmt.Sprintf("[GET /subject][%d] getSubjectInternalServerError ", 500)
}

func (o *GetSubjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
