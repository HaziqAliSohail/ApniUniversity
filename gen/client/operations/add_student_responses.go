// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ApniUniversity/gen/models"
)

// AddStudentReader is a Reader for the AddStudent structure.
type AddStudentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddStudentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddStudentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewAddStudentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddStudentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /student] addStudent", response, response.Code())
	}
}

// NewAddStudentCreated creates a AddStudentCreated with default headers values
func NewAddStudentCreated() *AddStudentCreated {
	return &AddStudentCreated{}
}

/*
AddStudentCreated describes a response with status code 201, with default header values.

Student added Successfully
*/
type AddStudentCreated struct {
	Payload *models.Student
}

// IsSuccess returns true when this add student created response has a 2xx status code
func (o *AddStudentCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add student created response has a 3xx status code
func (o *AddStudentCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add student created response has a 4xx status code
func (o *AddStudentCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add student created response has a 5xx status code
func (o *AddStudentCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add student created response a status code equal to that given
func (o *AddStudentCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add student created response
func (o *AddStudentCreated) Code() int {
	return 201
}

func (o *AddStudentCreated) Error() string {
	return fmt.Sprintf("[POST /student][%d] addStudentCreated  %+v", 201, o.Payload)
}

func (o *AddStudentCreated) String() string {
	return fmt.Sprintf("[POST /student][%d] addStudentCreated  %+v", 201, o.Payload)
}

func (o *AddStudentCreated) GetPayload() *models.Student {
	return o.Payload
}

func (o *AddStudentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Student)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddStudentConflict creates a AddStudentConflict with default headers values
func NewAddStudentConflict() *AddStudentConflict {
	return &AddStudentConflict{}
}

/*
AddStudentConflict describes a response with status code 409, with default header values.

Student already exists
*/
type AddStudentConflict struct {
}

// IsSuccess returns true when this add student conflict response has a 2xx status code
func (o *AddStudentConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add student conflict response has a 3xx status code
func (o *AddStudentConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add student conflict response has a 4xx status code
func (o *AddStudentConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add student conflict response has a 5xx status code
func (o *AddStudentConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add student conflict response a status code equal to that given
func (o *AddStudentConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add student conflict response
func (o *AddStudentConflict) Code() int {
	return 409
}

func (o *AddStudentConflict) Error() string {
	return fmt.Sprintf("[POST /student][%d] addStudentConflict ", 409)
}

func (o *AddStudentConflict) String() string {
	return fmt.Sprintf("[POST /student][%d] addStudentConflict ", 409)
}

func (o *AddStudentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddStudentInternalServerError creates a AddStudentInternalServerError with default headers values
func NewAddStudentInternalServerError() *AddStudentInternalServerError {
	return &AddStudentInternalServerError{}
}

/*
AddStudentInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type AddStudentInternalServerError struct {
}

// IsSuccess returns true when this add student internal server error response has a 2xx status code
func (o *AddStudentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add student internal server error response has a 3xx status code
func (o *AddStudentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add student internal server error response has a 4xx status code
func (o *AddStudentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add student internal server error response has a 5xx status code
func (o *AddStudentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add student internal server error response a status code equal to that given
func (o *AddStudentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add student internal server error response
func (o *AddStudentInternalServerError) Code() int {
	return 500
}

func (o *AddStudentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /student][%d] addStudentInternalServerError ", 500)
}

func (o *AddStudentInternalServerError) String() string {
	return fmt.Sprintf("[POST /student][%d] addStudentInternalServerError ", 500)
}

func (o *AddStudentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
