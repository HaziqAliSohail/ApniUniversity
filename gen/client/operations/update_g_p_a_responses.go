// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateGPAReader is a Reader for the UpdateGPA structure.
type UpdateGPAReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGPAReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGPAOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateGPANotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateGPAInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /student/{ID}/gpa] updateGPA", response, response.Code())
	}
}

// NewUpdateGPAOK creates a UpdateGPAOK with default headers values
func NewUpdateGPAOK() *UpdateGPAOK {
	return &UpdateGPAOK{}
}

/*
UpdateGPAOK describes a response with status code 200, with default header values.

GPA assigned to Student
*/
type UpdateGPAOK struct {
	Payload int64
}

// IsSuccess returns true when this update g p a o k response has a 2xx status code
func (o *UpdateGPAOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update g p a o k response has a 3xx status code
func (o *UpdateGPAOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update g p a o k response has a 4xx status code
func (o *UpdateGPAOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update g p a o k response has a 5xx status code
func (o *UpdateGPAOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update g p a o k response a status code equal to that given
func (o *UpdateGPAOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update g p a o k response
func (o *UpdateGPAOK) Code() int {
	return 200
}

func (o *UpdateGPAOK) Error() string {
	return fmt.Sprintf("[PATCH /student/{ID}/gpa][%d] updateGPAOK  %+v", 200, o.Payload)
}

func (o *UpdateGPAOK) String() string {
	return fmt.Sprintf("[PATCH /student/{ID}/gpa][%d] updateGPAOK  %+v", 200, o.Payload)
}

func (o *UpdateGPAOK) GetPayload() int64 {
	return o.Payload
}

func (o *UpdateGPAOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGPANotFound creates a UpdateGPANotFound with default headers values
func NewUpdateGPANotFound() *UpdateGPANotFound {
	return &UpdateGPANotFound{}
}

/*
UpdateGPANotFound describes a response with status code 404, with default header values.

Student Not found!
*/
type UpdateGPANotFound struct {
}

// IsSuccess returns true when this update g p a not found response has a 2xx status code
func (o *UpdateGPANotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update g p a not found response has a 3xx status code
func (o *UpdateGPANotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update g p a not found response has a 4xx status code
func (o *UpdateGPANotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update g p a not found response has a 5xx status code
func (o *UpdateGPANotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update g p a not found response a status code equal to that given
func (o *UpdateGPANotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update g p a not found response
func (o *UpdateGPANotFound) Code() int {
	return 404
}

func (o *UpdateGPANotFound) Error() string {
	return fmt.Sprintf("[PATCH /student/{ID}/gpa][%d] updateGPANotFound ", 404)
}

func (o *UpdateGPANotFound) String() string {
	return fmt.Sprintf("[PATCH /student/{ID}/gpa][%d] updateGPANotFound ", 404)
}

func (o *UpdateGPANotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateGPAInternalServerError creates a UpdateGPAInternalServerError with default headers values
func NewUpdateGPAInternalServerError() *UpdateGPAInternalServerError {
	return &UpdateGPAInternalServerError{}
}

/*
UpdateGPAInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateGPAInternalServerError struct {
}

// IsSuccess returns true when this update g p a internal server error response has a 2xx status code
func (o *UpdateGPAInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update g p a internal server error response has a 3xx status code
func (o *UpdateGPAInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update g p a internal server error response has a 4xx status code
func (o *UpdateGPAInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update g p a internal server error response has a 5xx status code
func (o *UpdateGPAInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update g p a internal server error response a status code equal to that given
func (o *UpdateGPAInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update g p a internal server error response
func (o *UpdateGPAInternalServerError) Code() int {
	return 500
}

func (o *UpdateGPAInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /student/{ID}/gpa][%d] updateGPAInternalServerError ", 500)
}

func (o *UpdateGPAInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /student/{ID}/gpa][%d] updateGPAInternalServerError ", 500)
}

func (o *UpdateGPAInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
UpdateGPABody update g p a body
swagger:model UpdateGPABody
*/
type UpdateGPABody struct {

	// g p a
	GPA float64 `json:"GPA,omitempty"`
}

// Validate validates this update g p a body
func (o *UpdateGPABody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update g p a body based on context it is used
func (o *UpdateGPABody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateGPABody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateGPABody) UnmarshalBinary(b []byte) error {
	var res UpdateGPABody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
