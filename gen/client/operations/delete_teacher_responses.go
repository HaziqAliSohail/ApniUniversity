// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteTeacherReader is a Reader for the DeleteTeacher structure.
type DeleteTeacherReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTeacherReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTeacherNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteTeacherNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTeacherInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /teacher/{ID}] deleteTeacher", response, response.Code())
	}
}

// NewDeleteTeacherNoContent creates a DeleteTeacherNoContent with default headers values
func NewDeleteTeacherNoContent() *DeleteTeacherNoContent {
	return &DeleteTeacherNoContent{}
}

/*
DeleteTeacherNoContent describes a response with status code 204, with default header values.

Teacher Deleted Successfully!
*/
type DeleteTeacherNoContent struct {
}

// IsSuccess returns true when this delete teacher no content response has a 2xx status code
func (o *DeleteTeacherNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete teacher no content response has a 3xx status code
func (o *DeleteTeacherNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete teacher no content response has a 4xx status code
func (o *DeleteTeacherNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete teacher no content response has a 5xx status code
func (o *DeleteTeacherNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete teacher no content response a status code equal to that given
func (o *DeleteTeacherNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete teacher no content response
func (o *DeleteTeacherNoContent) Code() int {
	return 204
}

func (o *DeleteTeacherNoContent) Error() string {
	return fmt.Sprintf("[DELETE /teacher/{ID}][%d] deleteTeacherNoContent ", 204)
}

func (o *DeleteTeacherNoContent) String() string {
	return fmt.Sprintf("[DELETE /teacher/{ID}][%d] deleteTeacherNoContent ", 204)
}

func (o *DeleteTeacherNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTeacherNotFound creates a DeleteTeacherNotFound with default headers values
func NewDeleteTeacherNotFound() *DeleteTeacherNotFound {
	return &DeleteTeacherNotFound{}
}

/*
DeleteTeacherNotFound describes a response with status code 404, with default header values.

Teacher not found
*/
type DeleteTeacherNotFound struct {
}

// IsSuccess returns true when this delete teacher not found response has a 2xx status code
func (o *DeleteTeacherNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete teacher not found response has a 3xx status code
func (o *DeleteTeacherNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete teacher not found response has a 4xx status code
func (o *DeleteTeacherNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete teacher not found response has a 5xx status code
func (o *DeleteTeacherNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete teacher not found response a status code equal to that given
func (o *DeleteTeacherNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete teacher not found response
func (o *DeleteTeacherNotFound) Code() int {
	return 404
}

func (o *DeleteTeacherNotFound) Error() string {
	return fmt.Sprintf("[DELETE /teacher/{ID}][%d] deleteTeacherNotFound ", 404)
}

func (o *DeleteTeacherNotFound) String() string {
	return fmt.Sprintf("[DELETE /teacher/{ID}][%d] deleteTeacherNotFound ", 404)
}

func (o *DeleteTeacherNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTeacherInternalServerError creates a DeleteTeacherInternalServerError with default headers values
func NewDeleteTeacherInternalServerError() *DeleteTeacherInternalServerError {
	return &DeleteTeacherInternalServerError{}
}

/*
DeleteTeacherInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteTeacherInternalServerError struct {
}

// IsSuccess returns true when this delete teacher internal server error response has a 2xx status code
func (o *DeleteTeacherInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete teacher internal server error response has a 3xx status code
func (o *DeleteTeacherInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete teacher internal server error response has a 4xx status code
func (o *DeleteTeacherInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete teacher internal server error response has a 5xx status code
func (o *DeleteTeacherInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete teacher internal server error response a status code equal to that given
func (o *DeleteTeacherInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete teacher internal server error response
func (o *DeleteTeacherInternalServerError) Code() int {
	return 500
}

func (o *DeleteTeacherInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /teacher/{ID}][%d] deleteTeacherInternalServerError ", 500)
}

func (o *DeleteTeacherInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /teacher/{ID}][%d] deleteTeacherInternalServerError ", 500)
}

func (o *DeleteTeacherInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
