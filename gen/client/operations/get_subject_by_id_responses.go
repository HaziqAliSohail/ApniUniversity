// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/HaziqAliSohail/ApniUniversity/gen/models"
)

// GetSubjectByIDReader is a Reader for the GetSubjectByID structure.
type GetSubjectByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubjectByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubjectByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubjectByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSubjectByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /subject/{ID}] getSubjectByID", response, response.Code())
	}
}

// NewGetSubjectByIDOK creates a GetSubjectByIDOK with default headers values
func NewGetSubjectByIDOK() *GetSubjectByIDOK {
	return &GetSubjectByIDOK{}
}

/*
GetSubjectByIDOK describes a response with status code 200, with default header values.

Subject response
*/
type GetSubjectByIDOK struct {
	Payload *models.Subject
}

// IsSuccess returns true when this get subject by Id o k response has a 2xx status code
func (o *GetSubjectByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get subject by Id o k response has a 3xx status code
func (o *GetSubjectByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject by Id o k response has a 4xx status code
func (o *GetSubjectByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject by Id o k response has a 5xx status code
func (o *GetSubjectByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject by Id o k response a status code equal to that given
func (o *GetSubjectByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get subject by Id o k response
func (o *GetSubjectByIDOK) Code() int {
	return 200
}

func (o *GetSubjectByIDOK) Error() string {
	return fmt.Sprintf("[GET /subject/{ID}][%d] getSubjectByIdOK  %+v", 200, o.Payload)
}

func (o *GetSubjectByIDOK) String() string {
	return fmt.Sprintf("[GET /subject/{ID}][%d] getSubjectByIdOK  %+v", 200, o.Payload)
}

func (o *GetSubjectByIDOK) GetPayload() *models.Subject {
	return o.Payload
}

func (o *GetSubjectByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectByIDNotFound creates a GetSubjectByIDNotFound with default headers values
func NewGetSubjectByIDNotFound() *GetSubjectByIDNotFound {
	return &GetSubjectByIDNotFound{}
}

/*
GetSubjectByIDNotFound describes a response with status code 404, with default header values.

Subject not found
*/
type GetSubjectByIDNotFound struct {
}

// IsSuccess returns true when this get subject by Id not found response has a 2xx status code
func (o *GetSubjectByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject by Id not found response has a 3xx status code
func (o *GetSubjectByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject by Id not found response has a 4xx status code
func (o *GetSubjectByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subject by Id not found response has a 5xx status code
func (o *GetSubjectByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject by Id not found response a status code equal to that given
func (o *GetSubjectByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get subject by Id not found response
func (o *GetSubjectByIDNotFound) Code() int {
	return 404
}

func (o *GetSubjectByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /subject/{ID}][%d] getSubjectByIdNotFound ", 404)
}

func (o *GetSubjectByIDNotFound) String() string {
	return fmt.Sprintf("[GET /subject/{ID}][%d] getSubjectByIdNotFound ", 404)
}

func (o *GetSubjectByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubjectByIDInternalServerError creates a GetSubjectByIDInternalServerError with default headers values
func NewGetSubjectByIDInternalServerError() *GetSubjectByIDInternalServerError {
	return &GetSubjectByIDInternalServerError{}
}

/*
GetSubjectByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetSubjectByIDInternalServerError struct {
}

// IsSuccess returns true when this get subject by Id internal server error response has a 2xx status code
func (o *GetSubjectByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject by Id internal server error response has a 3xx status code
func (o *GetSubjectByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject by Id internal server error response has a 4xx status code
func (o *GetSubjectByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject by Id internal server error response has a 5xx status code
func (o *GetSubjectByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get subject by Id internal server error response a status code equal to that given
func (o *GetSubjectByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get subject by Id internal server error response
func (o *GetSubjectByIDInternalServerError) Code() int {
	return 500
}

func (o *GetSubjectByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /subject/{ID}][%d] getSubjectByIdInternalServerError ", 500)
}

func (o *GetSubjectByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /subject/{ID}][%d] getSubjectByIdInternalServerError ", 500)
}

func (o *GetSubjectByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
